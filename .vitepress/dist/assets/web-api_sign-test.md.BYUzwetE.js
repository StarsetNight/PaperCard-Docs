import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.BYhES31N.js";const g=JSON.parse('{"title":"签名测试","description":"","frontmatter":{},"headers":[],"relativePath":"web-api/sign-test.md","filePath":"web-api/sign-test.md","lastUpdated":1716562142000}'),t={name:"web-api/sign-test.md"},e=n(`<h1 id="签名测试" tabindex="-1">签名测试 <a class="header-anchor" href="#签名测试" aria-label="Permalink to &quot;签名测试&quot;">​</a></h1><h2 id="请求" tabindex="-1">请求 <a class="header-anchor" href="#请求" aria-label="Permalink to &quot;请求&quot;">​</a></h2><p><code>POST</code> <code>https://paper-card.cn/api/test/sign</code></p><p>请求体为一个JSON对象：</p><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 秒级时间戳，为客户端的当前时间</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;client_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;字符串&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 客户端ID，由PaperCard分配</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // params字段也可能没有，有的话是一个JSON对象</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;params&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 请求参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;sign&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;签名&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="签名算法" tabindex="-1">签名算法 <a class="header-anchor" href="#签名算法" aria-label="Permalink to &quot;签名算法&quot;">​</a></h2><p>使用客户端<code>secret</code>、秒级时间戳<code>ts</code>和其它参数（<code>params</code>）拼接成一个字符串。</p><p>然后再将这个字符串使用<strong>SHA256</strong>算法进行哈希，最后将哈希结果转换为<strong>16进制字符串</strong>。</p><p>注意：<code>params</code>中的参数名必须按照<strong>字母顺序</strong>升序排列，再转为JSON字符串参与拼接。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> toSign</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sign</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createHash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sha256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(signStr).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sign;</span></span></code></pre></div><h2 id="响应" tabindex="-1">响应 <a class="header-anchor" href="#响应" aria-label="Permalink to &quot;响应&quot;">​</a></h2><p>正确响应为<code>HTTP</code> <code>200</code>状态码，其它状态码表示错误。</p><p>响应JSON：</p><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;ec&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 字符串类型，错误代码，机器可读</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;em&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 字符串类型，错误信息，人类可读</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 响应数据，JSON对象，也可能没有</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 响应数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="ec-ok" tabindex="-1">ec: ok <a class="header-anchor" href="#ec-ok" aria-label="Permalink to &quot;ec: ok&quot;">​</a></h3><p>签名测试通过</p><h3 id="ec-sign-not-match" tabindex="-1">ec: sign_not_match <a class="header-anchor" href="#ec-sign-not-match" aria-label="Permalink to &quot;ec: sign_not_match&quot;">​</a></h3><p>如果签名测试未通过，<code>ec</code>为<code>sign_not_match</code></p><h3 id="ec-not-json" tabindex="-1">ec: not_json <a class="header-anchor" href="#ec-not-json" aria-label="Permalink to &quot;ec: not_json&quot;">​</a></h3><p>不是JSON请求</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ec&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;not_json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;em&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SyntaxError: Unexpected end of JSON input&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="ec-invalid-ts" tabindex="-1">ec: invalid_ts <a class="header-anchor" href="#ec-invalid-ts" aria-label="Permalink to &quot;ec: invalid_ts&quot;">​</a></h3><p><code>ts</code>参数错误，一般为时间戳过期，具体看<code>em</code></p><h3 id="ec-invalid-client-id" tabindex="-1">ec: invalid_client_id <a class="header-anchor" href="#ec-invalid-client-id" aria-label="Permalink to &quot;ec: invalid_client_id&quot;">​</a></h3><p><code>client_id</code>参数错误，大概率是没有注册，具体看<code>em</code></p><h3 id="ec-invalid-params" tabindex="-1">ec: invalid_params <a class="header-anchor" href="#ec-invalid-params" aria-label="Permalink to &quot;ec: invalid_params&quot;">​</a></h3><p><code>params</code>参数错误</p><h3 id="ec-invalid-sign" tabindex="-1">ec: invalid_sign <a class="header-anchor" href="#ec-invalid-sign" aria-label="Permalink to &quot;ec: invalid_sign&quot;">​</a></h3><p><code>sign</code>参数错误，与<code>sign_not_match</code>不同</p><h3 id="ec-unknown" tabindex="-1">ec: unknown <a class="header-anchor" href="#ec-unknown" aria-label="Permalink to &quot;ec: unknown&quot;">​</a></h3><p>未知的服务器错误</p>`,31),h=[e];function l(p,k,d,o,r,c){return a(),i("div",null,h)}const u=s(t,[["render",l]]);export{g as __pageData,u as default};
